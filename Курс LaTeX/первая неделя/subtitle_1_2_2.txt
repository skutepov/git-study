В прошлом видеофрагменте мы рассмотрели,
какие способы существуют, чтобы показать формулу в нашем
PDF-документе. Давайте теперь рассмотрим, как делать различные формулы, то есть какие
существуют команды для того, чтобы использовать распространенные математические знаки
 и действия. Давайте создадим для этого логический
раздел в нашем документе. Я пишу section, я продолжаю редактировать
тот же документ, который был в прошлом фрагменте и пишу здесь нюансы
работы с формулами. И подраздел первая часть, это дроби. Чтобы сделать простую дробь, существует
команда frac, от слова fraction. Вот, я могу сейчас обычную формулу внутри
строки, frac, Texstudio подсказывает мне, что должно
быть в числителе и в знаменателе. То есть, как написать числитель и
знаменатель - numerator и denominator. Я могу воспользоваться этой подсказкой и
заменить числитель, скажем, на три, а знаменатель
на шесть - очень простая команда, с двумя аргументами в фигурных скобках, числитель
и знаменатель. frac три шесть - это значит три
шестых, равно - это можно сократить и написать
ноль запятая пять. Как вы помните, здесь единственное
место, в котором важно не ставить пробел. То есть ноль запятая пять - это
десятичная дробь, значит, благодаря пакету icomma, мы можем избежать пробела
здесь, не ставя его в исходном тексте. Так, давайте, запустим это на обработку и
посмотрим, что получилось. Три шестых равно ноль пять. Ну, здесь три шестых выглядит
довольно неплохо, то есть, когда вы напечатаете эту бумагу
на принтере, несмотря на то, что документ на
принтере, несмотря на то, что цифры маленькие, вы
увидите их. Но, если у вас в этой дроби будет
что-то важное, то есть в числителе и знаменателе будут какие-то более сложные
выражения, чем просто отдельные цифры. Или, что еще хуже, в числителе и
знаменателе будут таке дроби, то есть, дробь будет
многоэтажная. То делать формулы именно так, плохая идея. Вы в данном случае, хотите скорее всего,
захотите сделать эту формулу выключной, то есть, я
перехожу в режим в режим выключных формул, с помощью
команды слэш, открывающаяся квадратная скобка и слэш,
закрывающаяся квадратная скобка. И запускаю снова на обработку. Посмотрим, что получается. Ага, вы видите, что формула теперь получила отдельную строку, выравнивание по
центру. И что для нас важно, тройка и шестерка
имеют нормальный размер. То, что мы находимся на отдельной
строке, позволяет LaTeX не сокращать размеры этих цифр, а ставить его
таким же, какой и размер остального текста, потому, что
если мы на отдельной строке, то это можно сделать без ущерба для
текста, который оказался вокруг. Не надо раздвигать строку и делать сверху,
снизу от нее большие пробелы. Они и так есть. Давайте, напишем что-нибудь здесь
более хитрое. Например, в числителе, вместо тройки можно
написать еще одну дробь. Например, вместо тройки, я могу написать
без ущерба для смысла, один плюс еще одна дробь, четыре, числитель и
два - знаменатель. Это останется верным равенством, я могу
запустить его на обработку и увидеть, что у меня
теперь трехэтажная дробь. Но, первый и второй этажи, четыре вторых,
оказались меньшего размера, то есть, рано или поздно
нужно начинать уменьшать цифры, потому что если
вы сделаете совсем много этажей, то, это будет
выглядеть некрасиво. Все-таки у вас должна быть основная
дробная черта, которая напротив знака равенства и, чтобы
дробь выглядела более-менее симметрично, сверху и снизу от
нее нужно подобрать размер цифр так, чтобы
это хорошо выглядело. Если вы не хотите, чтобы размер
цифр уменьшался, то есть, если вы хотите, чтобы четверка и двойка оставались
такого же размера, как и остальные цифры ну, это бывает нужно, если у вас
там не четверка и двойка, а какие-нибудь тоже сложные выражения, которые важно,
чтобы читатель увидел в первозданном виде. То вместо команды frac, именно той,
которая внутренняя команда frac, можно
использовать команду dfrac. Я дописал всего одну букву dfrac,
запустим на обработку и вы видите, что четверка и
двойка, теперь обычного размера. Вы можете экспериментировать
по-разному с этими командами. Как правило, просто команда frac,
повторенная столько раз, сколько вам нужно, будет давать
приличный результат. Если это не так, то можно
экспериментировать с командой dfrac. Перейдем к следующему нюансу работы с формулами, а именно, нюансу работы со
скобками. Subsection, скобки скобки, это довольно часто
встречающаяся вещь в формулах. Например, я могу, давайте я сразу перейду
в режим выключенной формулы, бэкслэш, открывающаяся скобка,
бэкслэш, закрывающаяся скобка. И напишу что-нибуль вроде два плюс три, в
скобках, умножить - я напишу умножить с помощью
команды звездочка - это неправильно, но мы это скоро исправим, умножить на пять равно
25. Запустим это на обработку, мне нужны были круглые скобки, я просто набрал их с
клавиатуры. В этой формуле все хорошо, кроме знака
умножения. Это неправильный знак умножения, если вы
хотите, чтобы ваш документ выглядел хорошо, не нужно его
использовать. Вместо звездочки нужно написать
какую-нибудь из команд, которая отвечает за умножение. Ну, скажем, есть такая команда, times,
которая создает крестик. Запустим на обработку еще раз и вот мы
видим, теперь это выглядит хорошо. В этой формуле с круглыми скобками,
проблем не возникло. Я просто набрал их с клавиатуры, и они
встали в нужные места. Они, как вы видите, не отделены пробелом
от тех цифр, которых они обнимают. И формула в целом выглядит очень хорошо. Однако стоит мне сделать формулу
несколько более сложной, и это изменится. Скажем, если я вместо три напишу дробь 9/3
- это законное преобразование, однако оно приводит к не
совсем симпатичному результату. Ну, на первый взгляд может показаться, что
опять же все хорошо и читатель поймет вас, если вы сдадите ему такой документ, то
понятно, что здесь призваны делать скобки. Они призваны отделять эту сумму от
умножения. Однако скобки здесь эти неправильного
размера. Вот эта скобка, которая рядом с 9/3,
закрывающаяся скобка, она явно не подходит к тем цифрам, рядом с
которыми она стоит. То, что нам нужно, это сделать ее
подходящей по высоте. LaTeX умеет автоматически подбирать высоту
скобок в соответствии с тем, рядом с чем, они
оказались. Для этого нужно сделать вот такую
несложную вещь. Там, где у меня была открывающаяся скобка,
ведь ее размер тоже нужно подобрать. Открывающаяся скобка, я напишу команду
left, прямо перед этой скобкой. То есть была просто скобка, а стала left
скобка. Texstudio подсвечивает красным, ему не
нравится, потому что открывающаяся скобка с командой left есть,
а закрывающейся нет. Давайте это исправим. И в закрываюшейся скобке напишем команду
right. Так, не здесь. Вот так, теперь вы можете видеть, что
скобки открываются с командой left круглая скобка и закрываются
с командой right круглая скобка. Давайте запустим на обработку, посмотрим,
что получится. Другое дело, высота скобок оказалась ровно
такой, какой нам нужно. Если бы дробь была трехэтажная,
четрыехэтажная, или там был бы какой-нибудь интеграл или какая-нибудь целая функция со
множеством ограничений, и вы бы хотели поставить скобки вокруг них, то эти скобки растянулись ровно настолько, насколько
нужно, чтобы внутри них оказалась весь фрагмент,
который вы хотите, чтобы оказался внутри
них. Итак, если мне нужны не круглые скобки, а, скажем, квадратные, то с ними тоже все
просто. Они просто набираются с клавиатуры. То есть я могу написать что-нибудь в квадратных скобках, в следующей
выключной формуле. И они отобразятся так, как должны быть. Что касается, какие еще скобки
бывают? Например, фигурные. Если мне нужны фигурные скобки, я могу
попробовать сделать так же, как с круглыми и с квадратными, написать
два плюс три. Запустить, и нет никаких фигурных скобок. Формула оказалась просто без них. Дело в том, что фигурные скобки, это очень
важный объект в LaTeX и по умолчанию он воспринимается как
аргумент какой-нибудь команды. То есть, мы видели здесь фигруные скобки,
вот, например, у команды frac есть девятка и тройка, два
аргумента. Эти фигурные скобки нигде не отображаются,
они нужны LaTeX, чтобы понять, что это начало первого аргумента, конец
первого аргумента и то же самое со вторым. Поэтому, если я хочу показать фигурные
скобки, то мне нужно поставить бэкслэш перед каждой
из них. Тогда я скажу LaTeX, что это не фигурные
скобки, которые нужны для ограничения аргумента, а это фигурные скобки, которые просто фигурные
скобки. Я могу точно так же писать перед ними left
и right, как перед любыми скобками - и перед круглыми, и
перед квадратными, и перед фигурными. Могу писать left и right, и они будут
растягиваться так, как нужно.